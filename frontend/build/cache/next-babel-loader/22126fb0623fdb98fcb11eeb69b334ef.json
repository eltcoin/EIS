{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { search } from \"../actions\";\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nvar SearchBox = styled.input.withConfig({\n  displayName: \"Search__SearchBox\",\n  componentId: \"g0h46i-0\"\n})([\"width:600px;height:40px;padding:0.25em 0.5em;\"]);\n\nvar Search = function Search(_ref) {\n  var dispatch = _ref.dispatch;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchQuery = _useState2[0],\n      setSearchQuery = _useState2[1];\n\n  function onKeyPress(event) {\n    if (event.key === 'Enter') {\n      // dispatch(search(searchQuery))\n      Router.push(\"/entry/\".concat(searchQuery));\n    }\n  }\n\n  return React.createElement(\"div\", null, React.createElement(SearchBox, {\n    type: \"text\",\n    placeholder: \"Enter a search term here\",\n    value: searchQuery,\n    onChange: function onChange(e) {\n      return setSearchQuery(e.target.value);\n    },\n    onKeyPress: onKeyPress\n  }));\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {// prefilledSearchQuery: state.entry.title || ''\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":null,"metadata":{},"sourceType":"module"}