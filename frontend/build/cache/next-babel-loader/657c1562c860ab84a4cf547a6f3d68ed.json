{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar mockResults = [{\n  up: 12,\n  down: 4,\n  total: 8,\n  link: \"magnet:?xt.1=urn:sha1:YNCKHTQCWBTRNJIV4WNAE52SJUQCZO5C&xt.2=urn:sha1:TXGCZQTH26NL6OUQAJJPFALHG2LTGBC7\"\n}, {\n  up: 21,\n  down: 19,\n  total: 2,\n  link: \"ipfs:2FQmRA3NWM82ZGynMbYzAgYTSXCVM14Wx1RZ8fKP42G6gjgj\"\n}];\nvar mockEntry = {\n  title: \"Bitcoin: A Peer-to-Peer Electronic Cash System\",\n  results: mockResults\n};\nvar mockUser = {\n  username: 'liamz',\n  reputation: 1200\n};\nvar initial = {\n  query: \"Bitcoin: A Peer-to-Peer Electronic Cash System\",\n  user: mockUser\n};\n\nfunction user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return mockUser;\n}\n\nimport { LOAD_NEWEST_ENTRIES_COMPLETE } from '../actions/registry';\n\nfunction misc() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    newestEntries: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_NEWEST_ENTRIES_COMPLETE:\n      return _objectSpread({}, state, {\n        newestEntries: action.results\n      });\n\n    default:\n      return state;\n  }\n}\n\nimport { LOAD_ENTRY_PROGRESS, LOAD_ENTRY_COMPLETE } from '../actions/registry';\nimport { LOAD_USER_PROGRESS, LOAD_USER_COMPLETE } from '../actions/users';\n\nfunction loading() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_ENTRY_PROGRESS:\n    case LOAD_USER_PROGRESS:\n      return true;\n\n    case LOAD_ENTRY_COMPLETE:\n    case LOAD_USER_COMPLETE:\n      return false;\n\n    default:\n      return false;\n  }\n}\n\nimport entry from './entry';\nimport users from './users';\nimport registry from './registry';\nimport txs from './txs';\nimport { combineReducers } from 'redux';\nexport default combineReducers({\n  user: user,\n  entry: entry,\n  misc: misc,\n  users: users,\n  loading: loading,\n  registry: registry,\n  txs: txs\n});","map":null,"metadata":{},"sourceType":"module"}